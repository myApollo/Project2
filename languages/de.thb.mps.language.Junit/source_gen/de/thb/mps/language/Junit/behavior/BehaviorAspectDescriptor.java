package de.thb.mps.language.Junit.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myTest__BehaviorDescriptor = new Test__BehaviorDescriptor();
  private final BHDescriptor myTestedClass__BehaviorDescriptor = new TestedClass__BehaviorDescriptor();
  private final BHDescriptor myEqualsAssert__BehaviorDescriptor = new EqualsAssert__BehaviorDescriptor();
  private final BHDescriptor myTestCase__BehaviorDescriptor = new TestCase__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myEqualsAssert__BehaviorDescriptor;
      case 1:
        return myTest__BehaviorDescriptor;
      case 2:
        return myTestCase__BehaviorDescriptor;
      case 3:
        return myTestedClass__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xae5a850eba764e7bL, 0xa659ee8de6219557L, 0x3f0975e1512812e4L), MetaIdFactory.conceptId(0xae5a850eba764e7bL, 0xa659ee8de6219557L, 0x657a42f517d5991L), MetaIdFactory.conceptId(0xae5a850eba764e7bL, 0xa659ee8de6219557L, 0x7e3e2ca0aa4169eaL), MetaIdFactory.conceptId(0xae5a850eba764e7bL, 0xa659ee8de6219557L, 0x657a42f5181d7d5L)).seal();
}
